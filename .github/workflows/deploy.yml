name: Deploy to Lightsail

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare bundle for deploy
        run: |
          set -euo pipefail
          # choose env file based on branch
          if [ "${{ github.ref }}" = 'refs/heads/staging' ]; then
            ENV_FILE=.env.staging
            BUNDLE_NAME=bundle.staging.tgz
          else
            ENV_FILE=.env.prod
            BUNDLE_NAME=bundle.prod.tgz
          fi
          echo "Using env file: $ENV_FILE"
          # ensure backend env exists in repo, fallback to .env
          if [ -f "$ENV_FILE" ]; then
            cp "$ENV_FILE" omega-app/backend/.env
          elif [ -f .env ]; then
            cp .env omega-app/backend/.env
          fi
          tar czf $BUNDLE_NAME omega-app infra
          ls -l $BUNDLE_NAME

      - name: Upload bundle to server
        env:
          SSH_HOST: ${{ github.ref == 'refs/heads/staging' && secrets.SSH_HOST_STAGE || secrets.SSH_HOST }}
          SSH_USER: ${{ github.ref == 'refs/heads/staging' && secrets.SSH_USER_STAGE || secrets.SSH_USER }}
          SSH_KEY: ${{ github.ref == 'refs/heads/staging' && secrets.SSH_KEY_STAGE || secrets.SSH_KEY }}
        run: |
          set -euo pipefail
          BUNDLE_NAME=$( [ "${{ github.ref }}" = 'refs/heads/staging' ] && echo bundle.staging.tgz || echo bundle.prod.tgz )
          echo "$SSH_KEY" > key && chmod 600 key
          scp -i key -o StrictHostKeyChecking=no $BUNDLE_NAME $SSH_USER@$SSH_HOST:/home/$SSH_USER/

      - name: Extract & run on server (docker compose)
        env:
          SSH_HOST: ${{ github.ref == 'refs/heads/staging' && secrets.SSH_HOST_STAGE || secrets.SSH_HOST }}
          SSH_USER: ${{ github.ref == 'refs/heads/staging' && secrets.SSH_USER_STAGE || secrets.SSH_USER }}
          SSH_KEY: ${{ github.ref == 'refs/heads/staging' && secrets.SSH_KEY_STAGE || secrets.SSH_KEY }}
        run: |
          set -euo pipefail
          BUNDLE_NAME=$( [ "${{ github.ref }}" = 'refs/heads/staging' ] && echo bundle.staging.tgz || echo bundle.prod.tgz )
          echo "$SSH_KEY" > key && chmod 600 key
          ssh -i key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST <<'EOF'
            set -e
            cd /home/$SSH_USER || exit 1
            tar xzf $BUNDLE_NAME
            cd omega-app/infra
            # try both compose formats
            docker compose -f docker-compose.lightsail.yml pull || true
            docker compose -f docker-compose.lightsail.yml up -d --build
          EOF