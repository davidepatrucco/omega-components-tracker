name: Deploy to Lightsail

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ðŸ”‘ Configura credenziali AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ðŸ”‘ Login a ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # ðŸ“¦ Set TAG in base al branch
      - name: Set image tag
        id: vars
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/staging" ]; then
            echo "TAG=staging" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      # ðŸ”¨ Build & Push Backend
      - name: Build & Push backend
        uses: docker/build-push-action@v5
        with:
          context: ./omega-app/backend
          file: ./omega-app/backend/Dockerfile.backend
          push: true
          tags: 152485877259.dkr.ecr.us-east-1.amazonaws.com/omega-components-tracker-backend:${{ env.TAG }}

      # ðŸ”¨ Build & Push Frontend
      - name: Build & Push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./omega-app/frontend
          file: ./omega-app/frontend/Dockerfile.frontend
          push: true
          tags: 152485877259.dkr.ecr.us-east-1.amazonaws.com/omega-components-tracker-frontend:${{ env.TAG }}

      # ðŸ”‘ Setup SSH agent (senza salvare file key)
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ github.ref == 'refs/heads/staging' && secrets.SSH_KEY_STAGE || secrets.SSH_KEY }}

      # ðŸš€ Deploy su Lightsail
      - name: Run remote docker compose
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/staging" ]; then
            SSH_HOST="${{ secrets.SSH_HOST_STAGE }}"
            SSH_USER="${{ secrets.SSH_USER_STAGE }}"
          else
            SSH_HOST="${{ secrets.SSH_HOST }}"
            SSH_USER="${{ secrets.SSH_USER }}"
          fi

          ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" TAG=${TAG} <<'EOF'
            set -e
            # Installa Docker se non presente
            if ! command -v docker >/dev/null 2>&1; then
              echo "Installazione Docker via apt-get..."
              sudo apt-get update && sudo apt-get install -y docker.io docker-compose-plugin && sudo usermod -aG docker $USER
              # Se ancora non installato, prova lo script ufficiale
              if ! command -v docker >/dev/null 2>&1; then
                echo "Fallback: installazione Docker via get.docker.com..."
                curl -fsSL https://get.docker.com | sudo sh
                sudo usermod -aG docker $USER
              fi
            fi
            # Installa AWS CLI se non presente
            if ! command -v aws >/dev/null 2>&1; then
              echo "Installazione AWS CLI..."
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install
              rm -rf awscliv2.zip aws/
            fi
            cd /home/$SSH_USER/omega-app/infra
            # Login a ECR (richiede AWS CLI e variabili AWS_ACCESS_KEY_ID/SECRET_KEY/REGION sul server)
            export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
            export AWS_REGION="us-east-1"
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 152485877259.dkr.ecr.us-east-1.amazonaws.com
            docker compose -f docker-compose.lightsail.yml pull
            docker compose -f docker-compose.lightsail.yml up -d
          EOF