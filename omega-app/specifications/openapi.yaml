openapi: 3.0.3
info:
  title: Omega Component Tracker - Minimal API
  version: 0.1.0
  description: |
    Minimal OpenAPI spec for core endpoints used by the frontend.
    Includes authentication scheme and health endpoint. See `docs/CORS_POLICY.md` for CORS guidance.
servers:
  - url: /
    description: Local / proxied server (Vite dev or production root)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Component:
      type: object
      properties:
        _id:
          type: string
        commessaId:
          type: string
        commessaName:
          type: string
        name:
          type: string
        barcode:
          type: string
        status:
          type: string
        allowedStatuses:
          type: array
          items:
            type: string
        history:
          type: array
          items:
            type: object
        trattamenti:
          type: array
          items:
            type: string
        ddt:
          type: array
          items:
            type: object
    ComponentsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        total:
          type: integer
    Commessa:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        name:
          type: string
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
    ChangeStatusRequest:
      type: object
      properties:
        componentId:
          type: string
        to:
          type: string
        note:
          type: string
        ddtNumber:
          type: string
        ddtDate:
          type: string
          format: date
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        code:
          type: string
        details:
          type: object
paths:
  /health:
    get:
      summary: Health check
      tags: [Ops]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  db:
                    type: string
                    example: ok
  /components:
    get:
      summary: List components (paged)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 25
        - in: query
          name: commessaId
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          description: List of components
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create component (supports multipart/form-data)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                commessaId:
                  type: string
                commessaName:
                  type: string
                name:
                  type: string
                barcode:
                  type: string
                status:
                  type: string
                trattamenti:
                  type: array
                  items:
                    type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              files:
                contentType: application/octet-stream
      responses:
        '201':
          description: Component created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /components/{id}:
    put:
      summary: Update component (supports multipart/form-data)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                status:
                  type: string
                note:
                  type: string
                ddtFile:
                  type: array
                  items:
                    type: string
                    format: binary
                ddtNumber:
                  type: string
                ddtDate:
                  type: string
                  format: date
      responses:
        '200':
          description: Component updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /changestatus:
    post:
      summary: Change component status (record history, optional DDT fields)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeStatusRequest'
      responses:
        '200':
          description: Status changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        '400':
          description: Validation or business rule error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /commesse/{id}:
    get:
      summary: Get commessa by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Commessa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commessa'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - bearerAuth: []
tags:
  - name: Ops
  - name: Components
  - name: Commesse
